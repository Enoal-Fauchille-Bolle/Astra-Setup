#################################### ZSH ####################################

- name: Install zsh
  apt:
    name:
      - zsh
    state: present
  become: true
  tags: [zsh]

- name: Change user's shell to Zsh
  user:
    name: "{{ user_name }}"
    shell: /bin/zsh
  become: true
  tags: [zsh]

################################# Oh My Zsh #################################

- name: Clone Oh My Zsh
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "/home/{{ user_name }}/.oh-my-zsh"
    version: master
    update: no
  become: true
  tags: [omz]

- name: Set permissions for Oh My Zsh
  file:
    path: "/home/{{ user_name }}/.oh-my-zsh"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  become: true
  tags: [omz]

############################### Powerlevel10k ###############################

- name: Clone Powerlevel10k theme
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "/home/{{ user_name }}/.oh-my-zsh/custom/themes/powerlevel10k"
    version: master
    update: no
  become: true
  tags: [p10k]

- name: Set permissions for Powerlevel10k theme
  file:
    path: "/home/{{ user_name }}/.oh-my-zsh/custom/themes/powerlevel10k"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  become: true
  tags: [p10k]

- name: Deploy .zshrc with Powerlevel10k configuration
  template:
    src: "{{ role_path }}/files/zshrc.j2"
    dest: "/home/{{ user_name }}/.zshrc"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0644'
  become: true
  tags: [p10k]

########################### Powerlevel10k plugins ###########################

- name: Clone zsh-autosuggestions
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "/home/{{ user_name }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    version: master
    update: no
  become: true
  tags: [p10k]

- name: Clone zsh-syntax-highlighting
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "/home/{{ user_name }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    version: master
    update: no
  become: true
  tags: [p10k]

- name: Fix ownership of Oh My Zsh plugins
  file:
    path: "/home/{{ user_name }}/.oh-my-zsh/custom/plugins"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  become: true
  tags: [p10k]

######################## Powerlevel10k configuration ########################

- name: Deploy Powerlevel10k configuration
  copy:
    src: "{{ role_path }}/files/p10k.zsh"
    dest: "/home/{{ user_name }}/.p10k.zsh"
    owner: "{{ user_name }}"
    mode: '0644'
  become: true
  tags: [p10k]

################################ Fuzzy Finder ################################

- name: Clone Fuzzy Finder
  git:
    repo: https://github.com/junegunn/fzf.git
    dest: "/home/{{ user_name }}/.fzf"
    version: master
    update: no
  become: true
  tags: [fzf]

- name: Set permissions for Fuzzy Finder
  file:
    path: "/home/{{ user_name }}/.fzf"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  become: true
  tags: [fzf]

- name: Install Fuzzy Finder
  command: "/home/{{ user_name }}/.fzf/install --all --no-bash --no-fish"
  args:
    creates: "/home/{{ user_name }}/.fzf/bin/fzf"
    chdir: "/home/{{ user_name }}"
  become: true
  environment:
    HOME: "/home/{{ user_name }}"
  tags: [fzf]

- name: Fix ownership for FZF
  file:
    path: "/home/{{ user_name }}/.fzf"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  become: true
  tags: [fzf]

#################################### MOTD ####################################

- name: Stat MOTD scripts
  stat:
    path: "{{ item }}"
  loop:
    - /etc/update-motd.d/10-landscape-sysinfo
    - /etc/update-motd.d/91-release-upgrade
  register: motd_scripts
  become: true
  tags: [motd]

- name: Disable MOTD scripts (remove exec bit)
  file:
    path: "{{ item.stat.path }}"
    mode: '0644'
  loop: "{{ motd_scripts.results }}"
  when:
    - motd_disable | bool
    - item.stat.exists
    - item.stat.mode | int(base=8) != 0o644
  notify: Restart SSH
  become: true
  tags: [motd]

- name: Enable MOTD scripts (restore exec bit)
  file:
    path: "{{ item.stat.path }}"
    mode: '0755'
  loop: "{{ motd_scripts.results }}"
  when:
    - not motd_disable | bool
    - item.stat.exists
    - item.stat.mode | int(base=8) != 0o755
  notify: Restart SSH
  become: true
  tags: [motd]

- name: Comment out pam_motd in sshd PAM config
  replace:
    path: /etc/pam.d/sshd
    regexp: '^session\s+optional\s+pam_motd\.so'
    replace: '# session optional pam_motd.so'
  when: motd_disable | bool
  notify: Restart SSH
  become: true
  tags: [motd]

- name: Uncomment pam_motd in sshd PAM config
  replace:
    path: /etc/pam.d/sshd
    regexp: '^#\s*session\s+optional\s+pam_motd\.so'
    replace: 'session optional pam_motd.so'
  when: not motd_disable | bool
  notify: Restart SSH
  become: true
  tags: [motd]

- name: Ensure PrintLastLog is set to no/yes
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PrintLastLog'
    line: "PrintLastLog {{ motd_disable | bool | ternary('no','yes') }}"
    state: present
    create: yes
  notify: Restart SSH
  become: true
  tags: [motd]

- name: Ensure PrintMotd is set to no/yes
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PrintMotd'
    line: "PrintMotd {{ motd_disable | bool | ternary('no','yes') }}"
    state: present
    create: yes
  notify: Restart SSH
  become: true
  tags: [motd]
